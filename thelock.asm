;  ASM code generated by mikroVirtualMachine for PIC - V. 6.2.1.0
;  Date/Time: 3/29/2010 1:05:29 PM
;  Info: http://www.mikroelektronika.co.yu


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2AAD			GOTO	_main
$0004	$	_Delay_1us:
;delays.c,2 :: 		void Delay_1us() {
;delays.c,3 :: 		Delay_us(1);
$0004	$0000			NOP
;delays.c,4 :: 		}
$0005	$0008			RETURN
$0006	$	_Delay_5500us:
;delays.c,26 :: 		void Delay_5500us() {
;delays.c,27 :: 		Delay_us(5500);
$0006	$3008			MOVLW	8
$0007	$1303			BCF	STATUS, RP1
$0008	$1283			BCF	STATUS, RP0
$0009	$00FB			MOVWF	STACK_11
$000A	$30FF			MOVLW	255
$000B	$00FA			MOVWF	STACK_10
$000C	$0BFB			DECFSZ	STACK_11, F
$000D	$280F			GOTO	$+2
$000E	$2812			GOTO	$+4
$000F	$0BFA			DECFSZ	STACK_10, F
$0010	$280F			GOTO	$-1
$0011	$280C			GOTO	$-5
$0012	$301E			MOVLW	30
$0013	$00FA			MOVWF	STACK_10
$0014	$0BFA			DECFSZ	STACK_10, F
$0015	$2814			GOTO	$-1
;delays.c,28 :: 		}
$0016	$0008			RETURN
$0017	$	_Delay_50us:
;delays.c,14 :: 		void Delay_50us() {
;delays.c,15 :: 		Delay_us(50);
$0017	$3010			MOVLW	16
$0018	$1303			BCF	STATUS, RP1
$0019	$1283			BCF	STATUS, RP0
$001A	$00FA			MOVWF	STACK_10
$001B	$0BFA			DECFSZ	STACK_10, F
$001C	$281B			GOTO	$-1
$001D	$0000			NOP
;delays.c,16 :: 		}
$001E	$0008			RETURN
$001F	$	_Lcd_Cmd:
$001F	$1303			BCF	STATUS, RP1
$0020	$1283			BCF	STATUS, RP0
$0021	$0820			MOVF	LCD_port_address, 0
$0022	$0084			MOVWF	FSR
$0023	$1683			BSF	STATUS, RP0
$0024	$0864			MOVF	FARG_Lcd_Cmd+0, 0
$0025	$1903			BTFSC	STATUS, Z
$0026	$2827			GOTO	L_Lcd_Cmd_0
$0027	$	L_Lcd_Cmd_0:
$0027	$0180			CLRF	INDF
$0028	$1BE4			BTFSC	FARG_Lcd_Cmd+0, 7
$0029	$1580			BSF	INDF, ___DB7
$002A	$1B64			BTFSC	FARG_Lcd_Cmd+0, 6
$002B	$1500			BSF	INDF, ___DB6
$002C	$1AE4			BTFSC	FARG_Lcd_Cmd+0, 5
$002D	$1480			BSF	INDF, ___DB5
$002E	$1A64			BTFSC	FARG_Lcd_Cmd+0, 4
$002F	$1400			BSF	INDF, ___DB4
$0030	$1283			BCF	STATUS, RP0
$0031	$0821			MOVF	LCD_cmd_status, 0
$0032	$1903			BTFSC	STATUS, Z
$0033	$2836			GOTO	L_Lcd_Cmd_1
$0034	$1380			BCF	INDF, ___RS
$0035	$2837			GOTO	L_Lcd_Cmd_2
$0036	$	L_Lcd_Cmd_1:
$0036	$1780			BSF	INDF, ___RS
$0037	$	L_Lcd_Cmd_2:
$0037	$1700			BSF	INDF, ___ENABLE
$0038	$2004			CALL	_Delay_1us
$0039	$1683			BSF	STATUS, RP0
$003A	$0864			MOVF	FARG_Lcd_Cmd+0, 0
$003B	$1903			BTFSC	STATUS, Z
$003C	$283D			GOTO	L_Lcd_Cmd_3
$003D	$	L_Lcd_Cmd_3:
$003D	$1300			BCF	INDF, ___ENABLE
$003E	$0180			CLRF	INDF
$003F	$19E4			BTFSC	FARG_Lcd_Cmd+0, 3
$0040	$1580			BSF	INDF, ___DB7
$0041	$1964			BTFSC	FARG_Lcd_Cmd+0, 2
$0042	$1500			BSF	INDF, ___DB6
$0043	$18E4			BTFSC	FARG_Lcd_Cmd+0, 1
$0044	$1480			BSF	INDF, ___DB5
$0045	$1864			BTFSC	FARG_Lcd_Cmd+0, 0
$0046	$1400			BSF	INDF, ___DB4
$0047	$1283			BCF	STATUS, RP0
$0048	$0821			MOVF	LCD_cmd_status, 0
$0049	$1903			BTFSC	STATUS, Z
$004A	$284D			GOTO	L_Lcd_Cmd_4
$004B	$1380			BCF	INDF, ___RS
$004C	$284E			GOTO	L_Lcd_Cmd_5
$004D	$	L_Lcd_Cmd_4:
$004D	$1780			BSF	INDF, ___RS
$004E	$	L_Lcd_Cmd_5:
$004E	$1700			BSF	INDF, ___ENABLE
$004F	$2004			CALL	_Delay_1us
$0050	$1300			BCF	INDF, ___ENABLE
$0051	$0821			MOVF	LCD_cmd_status, 0
$0052	$1903			BTFSC	STATUS, Z
$0053	$2856			GOTO	L_Lcd_Cmd_6
$0054	$2006			CALL	_Delay_5500us
$0055	$2857			GOTO	L_Lcd_Cmd_7
$0056	$	L_Lcd_Cmd_6:
$0056	$2017			CALL	_Delay_50us
$0057	$	L_Lcd_Cmd_7:
$0057	$0008			RETURN
$0058	$	_Div_16x16_S_L:
$0058	$1303			BCF	STATUS, RP1
$0059	$1283			BCF	STATUS, RP0
$005A	$0D71			RLF	STACK_1, W
$005B	$0DF8			RLF	STACK_8, F
$005C	$0DF9			RLF	STACK_9, F
$005D	$0874			MOVF	STACK_4, W
$005E	$02F8			SUBWF	STACK_8, F
$005F	$0875			MOVF	STACK_5, W
$0060	$1C03			BTFSS	STATUS, C
$0061	$0F75			INCFSZ	STACK_5, W
$0062	$02F9			SUBWF	STACK_9, F
$0063	$0DF0			RLF	STACK_0, F
$0064	$0DF1			RLF	STACK_1, F
$0065	$300F			MOVLW	15
$0066	$00FC			MOVWF	STACK_12
$0067	$0D71			RLF	STACK_1, W
$0068	$0DF8			RLF	STACK_8, F
$0069	$0DF9			RLF	STACK_9, F
$006A	$0874			MOVF	STACK_4, W
$006B	$1C70			BTFSS	STACK_0, 0
$006C	$2873			GOTO	$+7
$006D	$02F8			SUBWF	STACK_8, F
$006E	$0875			MOVF	STACK_5, W
$006F	$1C03			BTFSS	STATUS, C
$0070	$0F75			INCFSZ	STACK_5, W
$0071	$02F9			SUBWF	STACK_9, F
$0072	$2878			GOTO	$+6
$0073	$07F8			ADDWF	STACK_8, F
$0074	$0875			MOVF	STACK_5, W
$0075	$1803			BTFSC	STATUS, C
$0076	$0F75			INCFSZ	STACK_5, W
$0077	$07F9			ADDWF	STACK_9, F
$0078	$0DF0			RLF	STACK_0, F
$0079	$0DF1			RLF	STACK_1, F
$007A	$0BFC			DECFSZ	STACK_12, F
$007B	$2867			GOTO	$-20
$007C	$1870			BTFSC	STACK_0, 0
$007D	$2884			GOTO	$+7
$007E	$0874			MOVF	STACK_4, W
$007F	$07F8			ADDWF	STACK_8, F
$0080	$0875			MOVF	STACK_5, W
$0081	$1803			BTFSC	STATUS, C
$0082	$0F75			INCFSZ	STACK_5, W
$0083	$07F9			ADDWF	STACK_9, F
$0084	$0000			NOP
$0085	$0008			RETURN
$0086	$	_Lcd_Chr_CP:
$0086	$1303			BCF	STATUS, RP1
$0087	$1283			BCF	STATUS, RP0
$0088	$01A1			CLRF	LCD_cmd_status, 1
$0089	$086B			MOVF	FARG_Lcd_Chr_CP+0, 0
$008A	$1683			BSF	STATUS, RP0
$008B	$00E4			MOVWF	FARG_Lcd_Cmd+0
$008C	$201F			CALL	_Lcd_Cmd
$008D	$3001			MOVLW	1
$008E	$00A1			MOVWF	LCD_cmd_status
$008F	$0008			RETURN
$0090	$	_Keypad_Read:
$0090	$1303			BCF	STATUS, RP1
$0091	$1283			BCF	STATUS, RP0
$0092	$01EB			CLRF	Keypad_Read_rslt_L0, 1
$0093	$01EE			CLRF	Keypad_Read_loc_L0, 1
$0094	$01EF			CLRF	Keypad_Read_rowcnt_L0, 1
$0095	$3010			MOVLW	16
$0096	$00ED			MOVWF	Keypad_Read_shifter_L0
$0097	$0822			MOVF	keypad_16_key_pointer, 0
$0098	$0084			MOVWF	FSR
$0099	$	L_Keypad_Read_0:
$0099	$3004			MOVLW	4
$009A	$026F			SUBWF	Keypad_Read_rowcnt_L0, 0
$009B	$1803			BTFSC	STATUS, C
$009C	$28BE			GOTO	L_Keypad_Read_1
$009D	$086D			MOVF	Keypad_Read_shifter_L0, 0
$009E	$0080			MOVWF	INDF
$009F	$0000			NOP
$00A0	$0000			NOP
$00A1	$0000			NOP
$00A2	$0000			NOP
$00A3	$0000			NOP
$00A4	$0000			NOP
$00A5	$300F			MOVLW	15
$00A6	$0500			ANDWF	INDF, 0
$00A7	$00F0			MOVWF	STACK_0
$00A8	$0870			MOVF	STACK_0, 0
$00A9	$00EC			MOVWF	Keypad_Read_data_L0
$00AA	$0870			MOVF	STACK_0, 0
$00AB	$1903			BTFSC	STATUS, Z
$00AC	$28B8			GOTO	L_Keypad_Read_2
$00AD	$086E			MOVF	Keypad_Read_loc_L0, 0
$00AE	$00EB			MOVWF	Keypad_Read_rslt_L0
$00AF	$	L_Keypad_Read_3:
$00AF	$086C			MOVF	Keypad_Read_data_L0, 0
$00B0	$1903			BTFSC	STATUS, Z
$00B1	$28B6			GOTO	L_Keypad_Read_4
$00B2	$0CEC			RRF	Keypad_Read_data_L0, 1
$00B3	$13EC			BCF	Keypad_Read_data_L0, 7
$00B4	$0AEB			INCF	Keypad_Read_rslt_L0, 1
$00B5	$28AF			GOTO	L_Keypad_Read_3
$00B6	$	L_Keypad_Read_4:
$00B6	$3004			MOVLW	4
$00B7	$00EF			MOVWF	Keypad_Read_rowcnt_L0
$00B8	$	L_Keypad_Read_2:
$00B8	$0DED			RLF	Keypad_Read_shifter_L0, 1
$00B9	$106D			BCF	Keypad_Read_shifter_L0, 0
$00BA	$3004			MOVLW	4
$00BB	$07EE			ADDWF	Keypad_Read_loc_L0, 1
$00BC	$0AEF			INCF	Keypad_Read_rowcnt_L0, 1
$00BD	$2899			GOTO	L_Keypad_Read_0
$00BE	$	L_Keypad_Read_1:
$00BE	$086B			MOVF	Keypad_Read_rslt_L0, 0
$00BF	$00F0			MOVWF	STACK_0
$00C0	$0008			RETURN
$00C1	$	_Div_8x8_U:
$00C1	$1303			BCF	STATUS, RP1
$00C2	$1283			BCF	STATUS, RP0
$00C3	$01F8			CLRF	STACK_8, F
$00C4	$3008			MOVLW	8
$00C5	$00FC			MOVWF	STACK_12
$00C6	$0D70			RLF	STACK_0, W
$00C7	$0DF8			RLF	STACK_8, F
$00C8	$0874			MOVF	STACK_4, W
$00C9	$02F8			SUBWF	STACK_8, F
$00CA	$1803			BTFSC	STATUS, C
$00CB	$28CE			GOTO	$+3
$00CC	$07F8			ADDWF	STACK_8, F
$00CD	$1003			BCF	STATUS, C
$00CE	$0DF0			RLF	STACK_0, F
$00CF	$0BFC			DECFSZ	STACK_12, F
$00D0	$28C6			GOTO	$-10
$00D1	$0008			RETURN
$00D2	$	_Div_16x16_S:
$00D2	$1303			BCF	STATUS, RP1
$00D3	$1283			BCF	STATUS, RP0
$00D4	$01FD			CLRF	STACK_13
$00D5	$01F9			CLRF	STACK_9
$00D6	$01F8			CLRF	STACK_8
$00D7	$0871			MOVF	STACK_1, W
$00D8	$0470			IORWF	STACK_0, W
$00D9	$1903			BTFSC	STATUS, Z
$00DA	$3400			RETLW	0
$00DB	$0871			MOVF	STACK_1, W
$00DC	$0675			XORWF	STACK_5, W
$00DD	$00FA			MOVWF	STACK_10
$00DE	$1BFA			BTFSC	STACK_10, 7
$00DF	$09FD			COMF	STACK_13, F
$00E0	$01FB			CLRF	STACK_11
$00E1	$1FF5			BTFSS	STACK_5, 7
$00E2	$28E8			GOTO	$+6
$00E3	$09F4			COMF	STACK_4, F
$00E4	$09F5			COMF	STACK_5, F
$00E5	$0AF4			INCF	STACK_4, F
$00E6	$1903			BTFSC	STATUS, Z
$00E7	$0AF5			INCF	STACK_5, F
$00E8	$1FF1			BTFSS	STACK_1, 7
$00E9	$28EF			GOTO	$+6
$00EA	$09F0			COMF	STACK_0, F
$00EB	$09F1			COMF	STACK_1, F
$00EC	$0AF0			INCF	STACK_0, F
$00ED	$1903			BTFSC	STATUS, Z
$00EE	$0AF1			INCF	STACK_1, F
$00EF	$0871			MOVF	STACK_1, W
$00F0	$0475			IORWF	STACK_5, W
$00F1	$00FA			MOVWF	STACK_10
$00F2	$1BFA			BTFSC	STACK_10, 7
$00F3	$2904			GOTO	$+17
$00F4	$2058			CALL	_Div_16x16_S_L
$00F5	$187B			BTFSC	STACK_11, 0
$00F6	$2917			GOTO	$+33
$00F7	$1FFD			BTFSS	STACK_13, 7
$00F8	$3400			RETLW	0
$00F9	$09F0			COMF	STACK_0, F
$00FA	$09F1			COMF	STACK_1, F
$00FB	$0AF0			INCF	STACK_0, F
$00FC	$1903			BTFSC	STATUS, Z
$00FD	$0AF1			INCF	STACK_1, F
$00FE	$09F8			COMF	STACK_8, F
$00FF	$09F9			COMF	STACK_9, F
$0100	$0AF8			INCF	STACK_8, F
$0101	$1903			BTFSC	STATUS, Z
$0102	$0AF9			INCF	STACK_9, F
$0103	$3400			RETLW	0
$0104	$1FF5			BTFSS	STACK_5, 7
$0105	$2913			GOTO	$+14
$0106	$1BF1			BTFSC	STACK_1, 7
$0107	$290F			GOTO	$+8
$0108	$0871			MOVF	STACK_1, W
$0109	$00F9			MOVWF	STACK_9
$010A	$0870			MOVF	STACK_0, W
$010B	$00F8			MOVWF	STACK_8
$010C	$01F1			CLRF	STACK_1
$010D	$01F0			CLRF	STACK_0
$010E	$28F7			GOTO	$-23
$010F	$01F1			CLRF	STACK_1
$0110	$01F0			CLRF	STACK_0
$0111	$0AF0			INCF	STACK_0, F
$0112	$3400			RETLW	0
$0113	$09F1			COMF	STACK_1, F
$0114	$09F0			COMF	STACK_0, F
$0115	$0AFB			INCF	STACK_11, F
$0116	$28F4			GOTO	$-34
$0117	$0AF8			INCF	STACK_8, F
$0118	$1903			BTFSC	STATUS, Z
$0119	$0AF9			INCF	STACK_9, F
$011A	$0874			MOVF	STACK_4, W
$011B	$0278			SUBWF	STACK_8, W
$011C	$1D03			BTFSS	STATUS, Z
$011D	$28F7			GOTO	$-38
$011E	$0875			MOVF	STACK_5, W
$011F	$0279			SUBWF	STACK_9, W
$0120	$1D03			BTFSS	STATUS, Z
$0121	$28F7			GOTO	$-42
$0122	$01F9			CLRF	STACK_9
$0123	$01F8			CLRF	STACK_8
$0124	$0AF0			INCF	STACK_0, F
$0125	$1903			BTFSC	STATUS, Z
$0126	$0AF1			INCF	STACK_1, F
$0127	$1FF1			BTFSS	STACK_1, 7
$0128	$28F7			GOTO	$-49
$0129	$0000			NOP
$012A	$34FF			RETLW	255
$012B	$0008			RETURN
$012C	$	_Keypad_Init:
$012C	$1303			BCF	STATUS, RP1
$012D	$1283			BCF	STATUS, RP0
$012E	$0867			MOVF	FARG_Keypad_Init+0, 0
$012F	$00A2			MOVWF	keypad_16_key_pointer
$0130	$01A3			CLRF	keypad_16_key_pointer+1
$0131	$0867			MOVF	FARG_Keypad_Init+0, 0
$0132	$0084			MOVWF	FSR
$0133	$0180			CLRF	INDF, 1
$0134	$1784			BSF	FSR, 7
$0135	$300F			MOVLW	15
$0136	$0080			MOVWF	INDF
$0137	$0008			RETURN
$0138	$	_LCD_Out:
$0138	$294A			GOTO	L_LCD_Out_17
$0139	$	L_LCD_Out_19:
$0139	$3080			MOVLW	128
$013A	$1303			BCF	STATUS, RP1
$013B	$1283			BCF	STATUS, RP0
$013C	$00E7			MOVWF	FARG_LCD_Out+0
$013D	$295D			GOTO	L_LCD_Out_18
$013E	$	L_LCD_Out_20:
$013E	$30C0			MOVLW	192
$013F	$00E7			MOVWF	FARG_LCD_Out+0
$0140	$295D			GOTO	L_LCD_Out_18
$0141	$	L_LCD_Out_21:
$0141	$3094			MOVLW	148
$0142	$00E7			MOVWF	FARG_LCD_Out+0
$0143	$295D			GOTO	L_LCD_Out_18
$0144	$	L_LCD_Out_22:
$0144	$30D4			MOVLW	212
$0145	$00E7			MOVWF	FARG_LCD_Out+0
$0146	$295D			GOTO	L_LCD_Out_18
$0147	$	L_LCD_Out_23:
$0147	$3080			MOVLW	128
$0148	$00E7			MOVWF	FARG_LCD_Out+0
$0149	$295D			GOTO	L_LCD_Out_18
$014A	$	L_LCD_Out_17:
$014A	$1303			BCF	STATUS, RP1
$014B	$1283			BCF	STATUS, RP0
$014C	$0867			MOVF	FARG_LCD_Out+0, 0
$014D	$3A01			XORLW	1
$014E	$1903			BTFSC	STATUS, Z
$014F	$2939			GOTO	L_LCD_Out_19
$0150	$0867			MOVF	FARG_LCD_Out+0, 0
$0151	$3A02			XORLW	2
$0152	$1903			BTFSC	STATUS, Z
$0153	$293E			GOTO	L_LCD_Out_20
$0154	$0867			MOVF	FARG_LCD_Out+0, 0
$0155	$3A03			XORLW	3
$0156	$1903			BTFSC	STATUS, Z
$0157	$2941			GOTO	L_LCD_Out_21
$0158	$0867			MOVF	FARG_LCD_Out+0, 0
$0159	$3A04			XORLW	4
$015A	$1903			BTFSC	STATUS, Z
$015B	$2944			GOTO	L_LCD_Out_22
$015C	$2947			GOTO	L_LCD_Out_23
$015D	$	L_LCD_Out_18:
$015D	$0368			DECF	FARG_LCD_Out+1, 0
$015E	$00F0			MOVWF	STACK_0
$015F	$0867			MOVF	FARG_LCD_Out+0, 0
$0160	$07F0			ADDWF	STACK_0, 1
$0161	$0870			MOVF	STACK_0, 0
$0162	$00E7			MOVWF	FARG_LCD_Out+0
$0163	$0870			MOVF	STACK_0, 0
$0164	$1683			BSF	STATUS, RP0
$0165	$00E4			MOVWF	FARG_Lcd_Cmd+0
$0166	$201F			CALL	_Lcd_Cmd
$0167	$01A1			CLRF	LCD_cmd_status, 1
$0168	$01EA			CLRF	LCD_Out_i_L0, 1
$0169	$	L_LCD_Out_24:
$0169	$086A			MOVF	LCD_Out_i_L0, 0
$016A	$0769			ADDWF	FARG_LCD_Out+2, 0
$016B	$0084			MOVWF	FSR
$016C	$0800			MOVF	INDF, 0
$016D	$00F0			MOVWF	STACK_0
$016E	$0870			MOVF	STACK_0, 0
$016F	$1903			BTFSC	STATUS, Z
$0170	$2979			GOTO	L_LCD_Out_25
$0171	$086A			MOVF	LCD_Out_i_L0, 0
$0172	$0769			ADDWF	FARG_LCD_Out+2, 0
$0173	$0084			MOVWF	FSR
$0174	$0800			MOVF	INDF, 0
$0175	$00EB			MOVWF	FARG_Lcd_Chr_CP+0
$0176	$2086			CALL	_Lcd_Chr_CP
$0177	$0AEA			INCF	LCD_Out_i_L0, 1
$0178	$2969			GOTO	L_LCD_Out_24
$0179	$	L_LCD_Out_25:
$0179	$3001			MOVLW	1
$017A	$00A1			MOVWF	LCD_cmd_status
$017B	$0008			RETURN
$017C	$	_Keypad_Released:
$017C	$2090			CALL	_Keypad_Read
$017D	$0870			MOVF	STACK_0, 0
$017E	$00E7			MOVWF	Keypad_Released_rslt_L0
$017F	$	L_Keypad_Released_5:
$017F	$300F			MOVLW	15
$0180	$0500			ANDWF	INDF, 0
$0181	$00F0			MOVWF	STACK_0
$0182	$1903			BTFSC	STATUS, Z
$0183	$2986			GOTO	L_Keypad_Released_6
$0184	$0000			NOP
$0185	$297F			GOTO	L_Keypad_Released_5
$0186	$	L_Keypad_Released_6:
$0186	$0867			MOVF	Keypad_Released_rslt_L0, 0
$0187	$00F0			MOVWF	STACK_0
$0188	$0008			RETURN
$0189	$	_ByteToStr:
$0189	$1303			BCF	STATUS, RP1
$018A	$1283			BCF	STATUS, RP0
$018B	$0868			MOVF	FARG_ByteToStr+1, 0
$018C	$0084			MOVWF	FSR
$018D	$3020			MOVLW	32
$018E	$0080			MOVWF	INDF
$018F	$3020			MOVLW	32
$0190	$0A84			INCF	FSR, F
$0191	$0080			MOVWF	INDF
$0192	$0A84			INCF	FSR, F
$0193	$0080			MOVWF	INDF
$0194	$3001			MOVLW	1
$0195	$00E9			MOVWF	ByteToStr_len_L0
$0196	$0867			MOVF	FARG_ByteToStr+0, 0
$0197	$3C09			SUBLW	9
$0198	$1803			BTFSC	STATUS, C
$0199	$299B			GOTO	L_ByteToStr_0
$019A	$0AE9			INCF	ByteToStr_len_L0, 1
$019B	$	L_ByteToStr_0:
$019B	$0867			MOVF	FARG_ByteToStr+0, 0
$019C	$3C63			SUBLW	99
$019D	$1803			BTFSC	STATUS, C
$019E	$29A0			GOTO	L_ByteToStr_1
$019F	$0AE9			INCF	ByteToStr_len_L0, 1
$01A0	$	L_ByteToStr_1:
$01A0	$3003			MOVLW	3
$01A1	$0768			ADDWF	FARG_ByteToStr+1, 0
$01A2	$00F0			MOVWF	STACK_0
$01A3	$0870			MOVF	STACK_0, 0
$01A4	$0084			MOVWF	FSR
$01A5	$0180			CLRF	INDF, 1
$01A6	$0384			DECF	FSR, 1
$01A7	$	L_ByteToStr_2:
$01A7	$0869			MOVF	ByteToStr_len_L0, 0
$01A8	$3C00			SUBLW	0
$01A9	$1803			BTFSC	STATUS, C
$01AA	$29C5			GOTO	L_ByteToStr_3
$01AB	$300A			MOVLW	10
$01AC	$00F4			MOVWF	STACK_4
$01AD	$0867			MOVF	FARG_ByteToStr+0, 0
$01AE	$00F0			MOVWF	STACK_0
$01AF	$20C1			CALL	_div_8x8_u
$01B0	$0878			MOVF	STACK_8, 0
$01B1	$00F0			MOVWF	STACK_0
$01B2	$0870			MOVF	STACK_0, 0
$01B3	$0080			MOVWF	INDF
$01B4	$0800			MOVF	INDF, 0
$01B5	$0267			SUBWF	FARG_ByteToStr+0, 0
$01B6	$00F0			MOVWF	STACK_0
$01B7	$01F1			CLRF	STACK_0+1
$01B8	$1C03			BTFSS	STATUS, C
$01B9	$03F1			DECF	STACK_0+1, 1
$01BA	$300A			MOVLW	10
$01BB	$00F4			MOVWF	STACK_4
$01BC	$01F5			CLRF	STACK_4+1
$01BD	$20D2			CALL	_div_16x16_s
$01BE	$0870			MOVF	STACK_0, 0
$01BF	$00E7			MOVWF	FARG_ByteToStr+0
$01C0	$3030			MOVLW	48
$01C1	$0780			ADDWF	INDF, 1
$01C2	$0384			DECF	FSR, 1
$01C3	$03E9			DECF	ByteToStr_len_L0, 1
$01C4	$29A7			GOTO	L_ByteToStr_2
$01C5	$	L_ByteToStr_3:
$01C5	$0008			RETURN
$01C6	$	_LCD_Out_CP:
$01C6	$1303			BCF	STATUS, RP1
$01C7	$1283			BCF	STATUS, RP0
$01C8	$01E8			CLRF	LCD_Out_CP_i_L0, 1
$01C9	$	L_LCD_Out_CP_15:
$01C9	$0868			MOVF	LCD_Out_CP_i_L0, 0
$01CA	$0767			ADDWF	FARG_LCD_Out_CP+0, 0
$01CB	$0084			MOVWF	FSR
$01CC	$0800			MOVF	INDF, 0
$01CD	$00F0			MOVWF	STACK_0
$01CE	$0870			MOVF	STACK_0, 0
$01CF	$1903			BTFSC	STATUS, Z
$01D0	$29D9			GOTO	L_LCD_Out_CP_16
$01D1	$0868			MOVF	LCD_Out_CP_i_L0, 0
$01D2	$0767			ADDWF	FARG_LCD_Out_CP+0, 0
$01D3	$0084			MOVWF	FSR
$01D4	$0800			MOVF	INDF, 0
$01D5	$00EB			MOVWF	FARG_Lcd_Chr_CP+0
$01D6	$2086			CALL	_Lcd_Chr_CP
$01D7	$0AE8			INCF	LCD_Out_CP_i_L0, 1
$01D8	$29C9			GOTO	L_LCD_Out_CP_15
$01D9	$	L_LCD_Out_CP_16:
$01D9	$0008			RETURN
$01DA	$	GlobalInithelock:
$01DA	$3000			MOVLW	0
$01DB	$1303			BCF	STATUS, RP1
$01DC	$1283			BCF	STATUS, RP0
$01DD	$00CE			MOVWF	_attempts+0
$01DE	$3001			MOVLW	1
$01DF	$00B5			MOVWF	_state+0
$01E0	$3043			MOVLW	67
$01E1	$00A4			MOVWF	_text+0
$01E2	$306F			MOVLW	111
$01E3	$00A5			MOVWF	_text+1
$01E4	$306D			MOVLW	109
$01E5	$00A6			MOVWF	_text+2
$01E6	$3062			MOVLW	98
$01E7	$00A7			MOVWF	_text+3
$01E8	$3069			MOVLW	105
$01E9	$00A8			MOVWF	_text+4
$01EA	$306E			MOVLW	110
$01EB	$00A9			MOVWF	_text+5
$01EC	$3061			MOVLW	97
$01ED	$00AA			MOVWF	_text+6
$01EE	$3074			MOVLW	116
$01EF	$00AB			MOVWF	_text+7
$01F0	$3069			MOVLW	105
$01F1	$00AC			MOVWF	_text+8
$01F2	$306F			MOVLW	111
$01F3	$00AD			MOVWF	_text+9
$01F4	$306E			MOVLW	110
$01F5	$00AE			MOVWF	_text+10
$01F6	$3020			MOVLW	32
$01F7	$00AF			MOVWF	_text+11
$01F8	$304C			MOVLW	76
$01F9	$00B0			MOVWF	_text+12
$01FA	$306F			MOVLW	111
$01FB	$00B1			MOVWF	_text+13
$01FC	$3063			MOVLW	99
$01FD	$00B2			MOVWF	_text+14
$01FE	$306B			MOVLW	107
$01FF	$00B3			MOVWF	_text+15
$0200	$01B4			CLRF	_text+16
$0201	$3020			MOVLW	32
$0202	$00CF			MOVWF	_text1+0
$0203	$302A			MOVLW	42
$0204	$00D0			MOVWF	_text1+1
$0205	$3044			MOVLW	68
$0206	$00D1			MOVWF	_text1+2
$0207	$306F			MOVLW	111
$0208	$00D2			MOVWF	_text1+3
$0209	$306F			MOVLW	111
$020A	$00D3			MOVWF	_text1+4
$020B	$3072			MOVLW	114
$020C	$00D4			MOVWF	_text1+5
$020D	$3031			MOVLW	49
$020E	$00D5			MOVWF	_text1+6
$020F	$3020			MOVLW	32
$0210	$00D6			MOVWF	_text1+7
$0211	$304F			MOVLW	79
$0212	$00D7			MOVWF	_text1+8
$0213	$306E			MOVLW	110
$0214	$00D8			MOVWF	_text1+9
$0215	$302A			MOVLW	42
$0216	$00D9			MOVWF	_text1+10
$0217	$01DA			CLRF	_text1+11
$0218	$3020			MOVLW	32
$0219	$00DB			MOVWF	_text2+0
$021A	$302A			MOVLW	42
$021B	$00DC			MOVWF	_text2+1
$021C	$3044			MOVLW	68
$021D	$00DD			MOVWF	_text2+2
$021E	$306F			MOVLW	111
$021F	$00DE			MOVWF	_text2+3
$0220	$306F			MOVLW	111
$0221	$00DF			MOVWF	_text2+4
$0222	$3072			MOVLW	114
$0223	$00E0			MOVWF	_text2+5
$0224	$3032			MOVLW	50
$0225	$00E1			MOVWF	_text2+6
$0226	$3020			MOVLW	32
$0227	$00E2			MOVWF	_text2+7
$0228	$304F			MOVLW	79
$0229	$00E3			MOVWF	_text2+8
$022A	$306E			MOVLW	110
$022B	$00E4			MOVWF	_text2+9
$022C	$302A			MOVLW	42
$022D	$00E5			MOVWF	_text2+10
$022E	$01E6			CLRF	_text2+11
$022F	$302A			MOVLW	42
$0230	$1683			BSF	STATUS, RP0
$0231	$00A0			MOVWF	_text3+0
$0232	$3044			MOVLW	68
$0233	$00A1			MOVWF	_text3+1
$0234	$306F			MOVLW	111
$0235	$00A2			MOVWF	_text3+2
$0236	$306F			MOVLW	111
$0237	$00A3			MOVWF	_text3+3
$0238	$3072			MOVLW	114
$0239	$00A4			MOVWF	_text3+4
$023A	$3031			MOVLW	49
$023B	$00A5			MOVWF	_text3+5
$023C	$3026			MOVLW	38
$023D	$00A6			MOVWF	_text3+6
$023E	$3032			MOVLW	50
$023F	$00A7			MOVWF	_text3+7
$0240	$3020			MOVLW	32
$0241	$00A8			MOVWF	_text3+8
$0242	$304F			MOVLW	79
$0243	$00A9			MOVWF	_text3+9
$0244	$306E			MOVLW	110
$0245	$00AA			MOVWF	_text3+10
$0246	$302A			MOVLW	42
$0247	$00AB			MOVWF	_text3+11
$0248	$01AC			CLRF	_text3+12
$0249	$3000			MOVLW	0
$024A	$1283			BCF	STATUS, RP0
$024B	$00B8			MOVWF	_table+0
$024C	$3001			MOVLW	1
$024D	$00B9			MOVWF	_table+1
$024E	$3002			MOVLW	2
$024F	$00BA			MOVWF	_table+2
$0250	$3003			MOVLW	3
$0251	$00BB			MOVWF	_table+3
$0252	$3000			MOVLW	0
$0253	$00BC			MOVWF	_table+4
$0254	$3004			MOVLW	4
$0255	$00BD			MOVWF	_table+5
$0256	$3005			MOVLW	5
$0257	$00BE			MOVWF	_table+6
$0258	$3006			MOVLW	6
$0259	$00BF			MOVWF	_table+7
$025A	$3000			MOVLW	0
$025B	$00C0			MOVWF	_table+8
$025C	$3007			MOVLW	7
$025D	$00C1			MOVWF	_table+9
$025E	$3008			MOVLW	8
$025F	$00C2			MOVWF	_table+10
$0260	$3009			MOVLW	9
$0261	$00C3			MOVWF	_table+11
$0262	$3000			MOVLW	0
$0263	$00C4			MOVWF	_table+12
$0264	$300A			MOVLW	10
$0265	$00C5			MOVWF	_table+13
$0266	$3000			MOVLW	0
$0267	$00C6			MOVWF	_table+14
$0268	$300B			MOVLW	11
$0269	$00C7			MOVWF	_table+15
$026A	$3000			MOVLW	0
$026B	$00C8			MOVWF	_table+16
$026C	$0008			RETURN
$026D	$	_Lcd_Init:
$026D	$2006			CALL	_Delay_5500us
$026E	$2006			CALL	_Delay_5500us
$026F	$2006			CALL	_Delay_5500us
$0270	$0867			MOVF	FARG_Lcd_Init+0, 0
$0271	$00A0			MOVWF	LCD_port_address
$0272	$0867			MOVF	FARG_Lcd_Init+0, 0
$0273	$0084			MOVWF	FSR
$0274	$0180			CLRF	INDF, 1
$0275	$1784			BSF	FSR, 7
$0276	$0180			CLRF	INDF
$0277	$1384			BCF	FSR, 7
$0278	$1480			BSF	INDF, ___DB5
$0279	$1400			BSF	INDF, ___DB4
$027A	$1700			BSF	INDF, ___ENABLE
$027B	$1300			BCF	INDF, ___ENABLE
$027C	$2006			CALL	_Delay_5500us
$027D	$1700			BSF	INDF, ___ENABLE
$027E	$1300			BCF	INDF, ___ENABLE
$027F	$2006			CALL	_Delay_5500us
$0280	$1700			BSF	INDF, ___ENABLE
$0281	$1300			BCF	INDF, ___ENABLE
$0282	$2006			CALL	_Delay_5500us
$0283	$1480			BSF	INDF, ___DB5
$0284	$1000			BCF	INDF, ___DB4
$0285	$1700			BSF	INDF, ___ENABLE
$0286	$1300			BCF	INDF, ___ENABLE
$0287	$2006			CALL	_Delay_5500us
$0288	$0180			CLRF	INDF
$0289	$1480			BSF	INDF, ___DB5
$028A	$1700			BSF	INDF, ___ENABLE
$028B	$1300			BCF	INDF, ___ENABLE
$028C	$0180			CLRF	INDF
$028D	$1580			BSF	INDF, ___DB7
$028E	$1700			BSF	INDF, ___ENABLE
$028F	$1300			BCF	INDF, ___ENABLE
$0290	$2006			CALL	_Delay_5500us
$0291	$0180			CLRF	INDF
$0292	$1400			BSF	INDF, ___DB4
$0293	$1700			BSF	INDF, ___ENABLE
$0294	$1300			BCF	INDF, ___ENABLE
$0295	$0180			CLRF	INDF
$0296	$1700			BSF	INDF, ___ENABLE
$0297	$1300			BCF	INDF, ___ENABLE
$0298	$2006			CALL	_Delay_5500us
$0299	$0180			CLRF	INDF
$029A	$1700			BSF	INDF, ___ENABLE
$029B	$1300			BCF	INDF, ___ENABLE
$029C	$1400			BSF	INDF, ___DB4
$029D	$1700			BSF	INDF, ___ENABLE
$029E	$1300			BCF	INDF, ___ENABLE
$029F	$2006			CALL	_Delay_5500us
$02A0	$0180			CLRF	INDF
$02A1	$1700			BSF	INDF, ___ENABLE
$02A2	$1300			BCF	INDF, ___ENABLE
$02A3	$1400			BSF	INDF, ___DB4
$02A4	$1480			BSF	INDF, ___DB5
$02A5	$1500			BSF	INDF, ___DB6
$02A6	$1580			BSF	INDF, ___DB7
$02A7	$1700			BSF	INDF, ___ENABLE
$02A8	$1300			BCF	INDF, ___ENABLE
$02A9	$2006			CALL	_Delay_5500us
$02AA	$3001			MOVLW	1
$02AB	$00A1			MOVWF	LCD_cmd_status
$02AC	$0008			RETURN
$02AD	$	_main:
$02AD	$21DA			CALL	GlobalInithelock
$02AE	$3045			MOVLW	69
$02AF	$1683			BSF	STATUS, RP0
$02B0	$00AD			MOVWF	lstr1_thelock+0
$02B1	$306E			MOVLW	110
$02B2	$00AE			MOVWF	lstr1_thelock+1
$02B3	$3074			MOVLW	116
$02B4	$00AF			MOVWF	lstr1_thelock+2
$02B5	$3065			MOVLW	101
$02B6	$00B0			MOVWF	lstr1_thelock+3
$02B7	$3072			MOVLW	114
$02B8	$00B1			MOVWF	lstr1_thelock+4
$02B9	$3050			MOVLW	80
$02BA	$00B2			MOVWF	lstr1_thelock+5
$02BB	$3061			MOVLW	97
$02BC	$00B3			MOVWF	lstr1_thelock+6
$02BD	$3073			MOVLW	115
$02BE	$00B4			MOVWF	lstr1_thelock+7
$02BF	$3073			MOVLW	115
$02C0	$00B5			MOVWF	lstr1_thelock+8
$02C1	$303A			MOVLW	58
$02C2	$00B6			MOVWF	lstr1_thelock+9
$02C3	$01B7			CLRF	lstr1_thelock+10
$02C4	$302A			MOVLW	42
$02C5	$00B8			MOVWF	lstr2_thelock+0
$02C6	$302A			MOVLW	42
$02C7	$00B9			MOVWF	lstr2_thelock+1
$02C8	$3049			MOVLW	73
$02C9	$00BA			MOVWF	lstr2_thelock+2
$02CA	$306E			MOVLW	110
$02CB	$00BB			MOVWF	lstr2_thelock+3
$02CC	$3076			MOVLW	118
$02CD	$00BC			MOVWF	lstr2_thelock+4
$02CE	$3061			MOVLW	97
$02CF	$00BD			MOVWF	lstr2_thelock+5
$02D0	$306C			MOVLW	108
$02D1	$00BE			MOVWF	lstr2_thelock+6
$02D2	$3069			MOVLW	105
$02D3	$00BF			MOVWF	lstr2_thelock+7
$02D4	$3064			MOVLW	100
$02D5	$00C0			MOVWF	lstr2_thelock+8
$02D6	$3020			MOVLW	32
$02D7	$00C1			MOVWF	lstr2_thelock+9
$02D8	$3043			MOVLW	67
$02D9	$00C2			MOVWF	lstr2_thelock+10
$02DA	$306F			MOVLW	111
$02DB	$00C3			MOVWF	lstr2_thelock+11
$02DC	$3064			MOVLW	100
$02DD	$00C4			MOVWF	lstr2_thelock+12
$02DE	$3065			MOVLW	101
$02DF	$00C5			MOVWF	lstr2_thelock+13
$02E0	$302A			MOVLW	42
$02E1	$00C6			MOVWF	lstr2_thelock+14
$02E2	$302A			MOVLW	42
$02E3	$00C7			MOVWF	lstr2_thelock+15
$02E4	$01C8			CLRF	lstr2_thelock+16
$02E5	$3020			MOVLW	32
$02E6	$00C9			MOVWF	lstr3_thelock+0
$02E7	$302A			MOVLW	42
$02E8	$00CA			MOVWF	lstr3_thelock+1
$02E9	$3044			MOVLW	68
$02EA	$00CB			MOVWF	lstr3_thelock+2
$02EB	$306F			MOVLW	111
$02EC	$00CC			MOVWF	lstr3_thelock+3
$02ED	$306F			MOVLW	111
$02EE	$00CD			MOVWF	lstr3_thelock+4
$02EF	$3072			MOVLW	114
$02F0	$00CE			MOVWF	lstr3_thelock+5
$02F1	$3033			MOVLW	51
$02F2	$00CF			MOVWF	lstr3_thelock+6
$02F3	$3020			MOVLW	32
$02F4	$00D0			MOVWF	lstr3_thelock+7
$02F5	$304F			MOVLW	79
$02F6	$00D1			MOVWF	lstr3_thelock+8
$02F7	$306E			MOVLW	110
$02F8	$00D2			MOVWF	lstr3_thelock+9
$02F9	$302A			MOVLW	42
$02FA	$00D3			MOVWF	lstr3_thelock+10
$02FB	$01D4			CLRF	lstr3_thelock+11
$02FC	$3020			MOVLW	32
$02FD	$00D5			MOVWF	lstr4_thelock+0
$02FE	$3020			MOVLW	32
$02FF	$00D6			MOVWF	lstr4_thelock+1
$0300	$302A			MOVLW	42
$0301	$00D7			MOVWF	lstr4_thelock+2
$0302	$302A			MOVLW	42
$0303	$00D8			MOVWF	lstr4_thelock+3
$0304	$3041			MOVLW	65
$0305	$00D9			MOVWF	lstr4_thelock+4
$0306	$306C			MOVLW	108
$0307	$00DA			MOVWF	lstr4_thelock+5
$0308	$3061			MOVLW	97
$0309	$00DB			MOVWF	lstr4_thelock+6
$030A	$3072			MOVLW	114
$030B	$00DC			MOVWF	lstr4_thelock+7
$030C	$306D			MOVLW	109
$030D	$00DD			MOVWF	lstr4_thelock+8
$030E	$3020			MOVLW	32
$030F	$00DE			MOVWF	lstr4_thelock+9
$0310	$304F			MOVLW	79
$0311	$00DF			MOVWF	lstr4_thelock+10
$0312	$306E			MOVLW	110
$0313	$00E0			MOVWF	lstr4_thelock+11
$0314	$302A			MOVLW	42
$0315	$00E1			MOVWF	lstr4_thelock+12
$0316	$302A			MOVLW	42
$0317	$00E2			MOVWF	lstr4_thelock+13
$0318	$01E3			CLRF	lstr4_thelock+14
;thelock.c,14 :: 		void main(void) {
;thelock.c,17 :: 		LCD_Config(&PORTC,7,6,5,3,2,1,0) ;//Pin assignment
$0319	$3007			MOVLW	PORTC
$031A	$1283			BCF	STATUS, RP0
$031B	$00E7			MOVWF	FARG_Lcd_Init+0
$031C	$226D			CALL	_Lcd_Init
;thelock.c,19 :: 		LCD_Cmd(LCD_CLEAR)               ;//Clear display
$031D	$3001			MOVLW	1
$031E	$1683			BSF	STATUS, RP0
$031F	$00E4			MOVWF	FARG_Lcd_Cmd+0
$0320	$201F			CALL	_Lcd_Cmd
;thelock.c,20 :: 		LCD_Cmd(LCD_CURSOR_OFF)          ;//Turn cursor off
$0321	$300C			MOVLW	12
$0322	$1683			BSF	STATUS, RP0
$0323	$00E4			MOVWF	FARG_Lcd_Cmd+0
$0324	$201F			CALL	_Lcd_Cmd
;thelock.c,21 :: 		LCD_Cmd(LCD_SECOND_ROW)          ;//Move to ROW2 for rest of program
$0325	$30C0			MOVLW	192
$0326	$1683			BSF	STATUS, RP0
$0327	$00E4			MOVWF	FARG_Lcd_Cmd+0
$0328	$201F			CALL	_Lcd_Cmd
;thelock.c,23 :: 		Keypad_Init(&PORTD)              ;// Initialize Keypad on PORTD
$0329	$3008			MOVLW	PORTD
$032A	$00E7			MOVWF	FARG_Keypad_Init+0
$032B	$212C			CALL	_Keypad_Init
;thelock.c,24 :: 		LCD_OUT(1,1,text)                ;//Print welcome message
$032C	$3001			MOVLW	1
$032D	$00E7			MOVWF	FARG_LCD_Out+0
$032E	$3001			MOVLW	1
$032F	$00E8			MOVWF	FARG_LCD_Out+1
$0330	$3024			MOVLW	_text
$0331	$00E9			MOVWF	FARG_LCD_Out+2
$0332	$2138			CALL	_LCD_Out
;thelock.c,25 :: 		do {   //while ever loop
$0333	$	L_main_0:
;thelock.c,26 :: 		switch(state) { //check the current state
$0333	$2D83			GOTO	L_main_2
;thelock.c,27 :: 		case 1:
$0334	$	L_main_4:
;thelock.c,28 :: 		LCD_Cmd(LCD_CLEAR)    ;
$0334	$3001			MOVLW	1
$0335	$1683			BSF	STATUS, RP0
$0336	$00E4			MOVWF	FARG_Lcd_Cmd+0
$0337	$201F			CALL	_Lcd_Cmd
;thelock.c,29 :: 		LCD_out(1,1,text);
$0338	$3001			MOVLW	1
$0339	$00E7			MOVWF	FARG_LCD_Out+0
$033A	$3001			MOVLW	1
$033B	$00E8			MOVWF	FARG_LCD_Out+1
$033C	$3024			MOVLW	_text
$033D	$00E9			MOVWF	FARG_LCD_Out+2
$033E	$2138			CALL	_LCD_Out
;thelock.c,30 :: 		LCD_out(2,1,"EnterPass:");
$033F	$3002			MOVLW	2
$0340	$00E7			MOVWF	FARG_LCD_Out+0
$0341	$3001			MOVLW	1
$0342	$00E8			MOVWF	FARG_LCD_Out+1
$0343	$30AD			MOVLW	lstr1_thelock
$0344	$00E9			MOVWF	FARG_LCD_Out+2
$0345	$2138			CALL	_LCD_Out
;thelock.c,31 :: 		while(!keypad_Read()){}   //wait for key1 press
$0346	$	L_main_5:
$0346	$2090			CALL	_Keypad_Read
$0347	$0870			MOVF	STACK_0, 0
$0348	$1903			BTFSC	STATUS, Z
$0349	$2B46			GOTO	L_main_5
$034A	$	L_main_6:
;thelock.c,32 :: 		Delay_ms(10)             ;//debounce time
$034A	$300D			MOVLW	13
$034B	$00FB			MOVWF	STACK_11
$034C	$30FF			MOVLW	255
$034D	$00FA			MOVWF	STACK_10
$034E	$0BFB			DECFSZ	STACK_11, F
$034F	$2B51			GOTO	$+2
$0350	$2B54			GOTO	$+4
$0351	$0BFA			DECFSZ	STACK_10, F
$0352	$2B51			GOTO	$-1
$0353	$2B4E			GOTO	$-5
$0354	$30F3			MOVLW	243
$0355	$00FA			MOVWF	STACK_10
$0356	$0BFA			DECFSZ	STACK_10, F
$0357	$2B56			GOTO	$-1
$0358	$0000			NOP
;thelock.c,33 :: 		kp = Keypad_Released()   ;//wait for release
$0359	$217C			CALL	_Keypad_Released
$035A	$0870			MOVF	STACK_0, 0
$035B	$00B6			MOVWF	_kp
;thelock.c,34 :: 		var1=kp; //store var1 into kp
$035C	$0870			MOVF	STACK_0, 0
$035D	$00B7			MOVWF	_var1
;thelock.c,35 :: 		var1=table[kp];
$035E	$0870			MOVF	STACK_0, 0
$035F	$3F38			ADDLW	_table
$0360	$0084			MOVWF	FSR
$0361	$0800			MOVF	INDF, 0
$0362	$00F0			MOVWF	STACK_0
$0363	$0870			MOVF	STACK_0, 0
$0364	$00B7			MOVWF	_var1
;thelock.c,36 :: 		ByteToStr(var1,txt);
$0365	$0870			MOVF	STACK_0, 0
$0366	$00E7			MOVWF	FARG_ByteToStr+0
$0367	$3049			MOVLW	_txt
$0368	$00E8			MOVWF	FARG_ByteToStr+1
$0369	$2189			CALL	_ByteToStr
;thelock.c,37 :: 		Lcd_Out_Cp(txt);
$036A	$3049			MOVLW	_txt
$036B	$00E7			MOVWF	FARG_LCD_Out_CP+0
$036C	$21C6			CALL	_LCD_Out_CP
;thelock.c,38 :: 		state = 2;
$036D	$3002			MOVLW	2
$036E	$00B5			MOVWF	_state
;thelock.c,39 :: 		break;
$036F	$2DC0			GOTO	L_main_3
;thelock.c,40 :: 		case 2:
$0370	$	L_main_7:
;thelock.c,41 :: 		if(kp==15) state=1; //go back state 1 when kp = # (enter key)
$0370	$0836			MOVF	_kp, 0
$0371	$3A0F			XORLW	15
$0372	$1D03			BTFSS	STATUS, Z
$0373	$2B77			GOTO	L_main_8
$0374	$3001			MOVLW	1
$0375	$00B5			MOVWF	_state
$0376	$2B80			GOTO	L_main_9
$0377	$	L_main_8:
;thelock.c,42 :: 		else if(kp==13) state=1;//go back state 1 when kp = * (clear key)
$0377	$0836			MOVF	_kp, 0
$0378	$3A0D			XORLW	13
$0379	$1D03			BTFSS	STATUS, Z
$037A	$2B7E			GOTO	L_main_10
$037B	$3001			MOVLW	1
$037C	$00B5			MOVWF	_state
$037D	$2B80			GOTO	L_main_11
$037E	$	L_main_10:
;thelock.c,44 :: 		state = 3;//go to state 3 get key2
$037E	$3003			MOVLW	3
$037F	$00B5			MOVWF	_state
$0380	$	L_main_11:
$0380	$	L_main_9:
;thelock.c,45 :: 		break;
$0380	$2DC0			GOTO	L_main_3
;thelock.c,46 :: 		case 3:
$0381	$	L_main_12:
;thelock.c,47 :: 		while(!keypad_Read()){}   //wait for key2 press
$0381	$	L_main_13:
$0381	$2090			CALL	_Keypad_Read
$0382	$0870			MOVF	STACK_0, 0
$0383	$1903			BTFSC	STATUS, Z
$0384	$2B81			GOTO	L_main_13
$0385	$	L_main_14:
;thelock.c,48 :: 		Delay_ms(10)             ;//debounce time
$0385	$300D			MOVLW	13
$0386	$00FB			MOVWF	STACK_11
$0387	$30FF			MOVLW	255
$0388	$00FA			MOVWF	STACK_10
$0389	$0BFB			DECFSZ	STACK_11, F
$038A	$2B8C			GOTO	$+2
$038B	$2B8F			GOTO	$+4
$038C	$0BFA			DECFSZ	STACK_10, F
$038D	$2B8C			GOTO	$-1
$038E	$2B89			GOTO	$-5
$038F	$30F3			MOVLW	243
$0390	$00FA			MOVWF	STACK_10
$0391	$0BFA			DECFSZ	STACK_10, F
$0392	$2B91			GOTO	$-1
$0393	$0000			NOP
;thelock.c,49 :: 		kp = Keypad_Released()   ;//wait for release
$0394	$217C			CALL	_Keypad_Released
$0395	$0870			MOVF	STACK_0, 0
$0396	$00B6			MOVWF	_kp
;thelock.c,50 :: 		var2=kp;//store var2 into kp
$0397	$0870			MOVF	STACK_0, 0
$0398	$00CD			MOVWF	_var2
;thelock.c,51 :: 		var2=table[kp];
$0399	$0870			MOVF	STACK_0, 0
$039A	$3F38			ADDLW	_table
$039B	$0084			MOVWF	FSR
$039C	$0800			MOVF	INDF, 0
$039D	$00F0			MOVWF	STACK_0
$039E	$0870			MOVF	STACK_0, 0
$039F	$00CD			MOVWF	_var2
;thelock.c,52 :: 		ByteToStr(var2,txt);
$03A0	$0870			MOVF	STACK_0, 0
$03A1	$00E7			MOVWF	FARG_ByteToStr+0
$03A2	$3049			MOVLW	_txt
$03A3	$00E8			MOVWF	FARG_ByteToStr+1
$03A4	$2189			CALL	_ByteToStr
;thelock.c,53 :: 		Lcd_Out_Cp(txt);
$03A5	$3049			MOVLW	_txt
$03A6	$00E7			MOVWF	FARG_LCD_Out_CP+0
$03A7	$21C6			CALL	_LCD_Out_CP
;thelock.c,54 :: 		state=4;
$03A8	$3004			MOVLW	4
$03A9	$00B5			MOVWF	_state
;thelock.c,55 :: 		break;
$03AA	$2DC0			GOTO	L_main_3
;thelock.c,56 :: 		case 4:
$03AB	$	L_main_15:
;thelock.c,57 :: 		if(kp==15) state=1;//enter key goes back state 1
$03AB	$0836			MOVF	_kp, 0
$03AC	$3A0F			XORLW	15
$03AD	$1D03			BTFSS	STATUS, Z
$03AE	$2BB2			GOTO	L_main_16
$03AF	$3001			MOVLW	1
$03B0	$00B5			MOVWF	_state
$03B1	$2BBB			GOTO	L_main_17
$03B2	$	L_main_16:
;thelock.c,58 :: 		else if(kp==13) state=1;//clear key goes back state 1
$03B2	$0836			MOVF	_kp, 0
$03B3	$3A0D			XORLW	13
$03B4	$1D03			BTFSS	STATUS, Z
$03B5	$2BB9			GOTO	L_main_18
$03B6	$3001			MOVLW	1
$03B7	$00B5			MOVWF	_state
$03B8	$2BBB			GOTO	L_main_19
$03B9	$	L_main_18:
;thelock.c,60 :: 		state = 5;//continue goes to state 4
$03B9	$3005			MOVLW	5
$03BA	$00B5			MOVWF	_state
$03BB	$	L_main_19:
$03BB	$	L_main_17:
;thelock.c,61 :: 		break;
$03BB	$2DC0			GOTO	L_main_3
;thelock.c,62 :: 		case 5:
$03BC	$	L_main_20:
;thelock.c,63 :: 		while(!keypad_Read()){}   //wait for enter key press
$03BC	$	L_main_21:
$03BC	$2090			CALL	_Keypad_Read
$03BD	$0870			MOVF	STACK_0, 0
$03BE	$1903			BTFSC	STATUS, Z
$03BF	$2BBC			GOTO	L_main_21
$03C0	$	L_main_22:
;thelock.c,64 :: 		Delay_ms(10)             ;//debounce time
$03C0	$300D			MOVLW	13
$03C1	$00FB			MOVWF	STACK_11
$03C2	$30FF			MOVLW	255
$03C3	$00FA			MOVWF	STACK_10
$03C4	$0BFB			DECFSZ	STACK_11, F
$03C5	$2BC7			GOTO	$+2
$03C6	$2BCA			GOTO	$+4
$03C7	$0BFA			DECFSZ	STACK_10, F
$03C8	$2BC7			GOTO	$-1
$03C9	$2BC4			GOTO	$-5
$03CA	$30F3			MOVLW	243
$03CB	$00FA			MOVWF	STACK_10
$03CC	$0BFA			DECFSZ	STACK_10, F
$03CD	$2BCC			GOTO	$-1
$03CE	$0000			NOP
;thelock.c,65 :: 		kp = Keypad_Released()   ;//wait for release
$03CF	$217C			CALL	_Keypad_Released
$03D0	$0870			MOVF	STACK_0, 0
$03D1	$00B6			MOVWF	_kp
;thelock.c,66 :: 		state = 6;
$03D2	$3006			MOVLW	6
$03D3	$00B5			MOVWF	_state
;thelock.c,67 :: 		break;
$03D4	$2DC0			GOTO	L_main_3
;thelock.c,68 :: 		case 6:
$03D5	$	L_main_23:
;thelock.c,69 :: 		if(kp==13)
$03D5	$0836			MOVF	_kp, 0
$03D6	$3A0D			XORLW	13
$03D7	$1D03			BTFSS	STATUS, Z
$03D8	$2BDC			GOTO	L_main_24
;thelock.c,70 :: 		state =1; //clear goes back to s1
$03D9	$3001			MOVLW	1
$03DA	$00B5			MOVWF	_state
$03DB	$2BE5			GOTO	L_main_25
$03DC	$	L_main_24:
;thelock.c,71 :: 		else if(kp==15)
$03DC	$0836			MOVF	_kp, 0
$03DD	$3A0F			XORLW	15
$03DE	$1D03			BTFSS	STATUS, Z
$03DF	$2BE3			GOTO	L_main_26
;thelock.c,72 :: 		state = 7;//enter key goes to state 7
$03E0	$3007			MOVLW	7
$03E1	$00B5			MOVWF	_state
$03E2	$2BE5			GOTO	L_main_27
$03E3	$	L_main_26:
;thelock.c,73 :: 		else state = 5;
$03E3	$3005			MOVLW	5
$03E4	$00B5			MOVWF	_state
$03E5	$	L_main_27:
$03E5	$	L_main_25:
;thelock.c,74 :: 		break;
$03E5	$2DC0			GOTO	L_main_3
;thelock.c,75 :: 		case 7:
$03E6	$	L_main_28:
;thelock.c,76 :: 		if (var1==0 && var2==5)//comparing for door1
$03E6	$0837			MOVF	_var1, 0
$03E7	$3A00			XORLW	0
$03E8	$1D03			BTFSS	STATUS, Z
$03E9	$2BF1			GOTO	L_main_31
$03EA	$084D			MOVF	_var2, 0
$03EB	$3A05			XORLW	5
$03EC	$1D03			BTFSS	STATUS, Z
$03ED	$2BF1			GOTO	L_main_31
$03EE	$	L178_ex_L_main_31:
;thelock.c,77 :: 		state = 12;  //goes state 11 open door1
$03EE	$300C			MOVLW	12
$03EF	$00B5			MOVWF	_state
$03F0	$2BF3			GOTO	L_main_32
$03F1	$	L_main_31:
;thelock.c,78 :: 		else state =8;
$03F1	$3008			MOVLW	8
$03F2	$00B5			MOVWF	_state
$03F3	$	L_main_32:
;thelock.c,79 :: 		break;
$03F3	$2DC0			GOTO	L_main_3
;thelock.c,80 :: 		case 8:
$03F4	$	L_main_33:
;thelock.c,81 :: 		if (var1==2 && var2 == 8)//comparing for door2
$03F4	$0837			MOVF	_var1, 0
$03F5	$3A02			XORLW	2
$03F6	$1D03			BTFSS	STATUS, Z
$03F7	$2BFF			GOTO	L_main_36
$03F8	$084D			MOVF	_var2, 0
$03F9	$3A08			XORLW	8
$03FA	$1D03			BTFSS	STATUS, Z
$03FB	$2BFF			GOTO	L_main_36
$03FC	$	L196_ex_L_main_36:
;thelock.c,82 :: 		state = 13;//goes to state 9 for door 2
$03FC	$300D			MOVLW	13
$03FD	$00B5			MOVWF	_state
$03FE	$2C01			GOTO	L_main_37
$03FF	$	L_main_36:
;thelock.c,83 :: 		else state=9;
$03FF	$3009			MOVLW	9
$0400	$00B5			MOVWF	_state
$0401	$	L_main_37:
;thelock.c,84 :: 		break;
$0401	$2DC0			GOTO	L_main_3
;thelock.c,85 :: 		case 9:
$0402	$	L_main_38:
;thelock.c,86 :: 		if(var1==8 && var2 == 2) //comparing foor door3
$0402	$0837			MOVF	_var1, 0
$0403	$3A08			XORLW	8
$0404	$1D03			BTFSS	STATUS, Z
$0405	$2C0D			GOTO	L_main_41
$0406	$084D			MOVF	_var2, 0
$0407	$3A02			XORLW	2
$0408	$1D03			BTFSS	STATUS, Z
$0409	$2C0D			GOTO	L_main_41
$040A	$	L214_ex_L_main_41:
;thelock.c,87 :: 		state = 14; //goes to state 15 for door 3
$040A	$300E			MOVLW	14
$040B	$00B5			MOVWF	_state
$040C	$2C0F			GOTO	L_main_42
$040D	$	L_main_41:
;thelock.c,88 :: 		else state =10;//goes next state
$040D	$300A			MOVLW	10
$040E	$00B5			MOVWF	_state
$040F	$	L_main_42:
;thelock.c,89 :: 		break;
$040F	$2DC0			GOTO	L_main_3
;thelock.c,90 :: 		case 10:
$0410	$	L_main_43:
;thelock.c,91 :: 		if (var1==3 && var2 == 3)
$0410	$0837			MOVF	_var1, 0
$0411	$3A03			XORLW	3
$0412	$1D03			BTFSS	STATUS, Z
$0413	$2C1B			GOTO	L_main_46
$0414	$084D			MOVF	_var2, 0
$0415	$3A03			XORLW	3
$0416	$1D03			BTFSS	STATUS, Z
$0417	$2C1B			GOTO	L_main_46
$0418	$	L232_ex_L_main_46:
;thelock.c,92 :: 		state = 15;//goes to state 14 for door1 & 2
$0418	$300F			MOVLW	15
$0419	$00B5			MOVWF	_state
$041A	$2C1D			GOTO	L_main_47
$041B	$	L_main_46:
;thelock.c,94 :: 		state =11;
$041B	$300B			MOVLW	11
$041C	$00B5			MOVWF	_state
$041D	$	L_main_47:
;thelock.c,95 :: 		break;
$041D	$2DC0			GOTO	L_main_3
;thelock.c,96 :: 		case 11:
$041E	$	L_main_48:
;thelock.c,97 :: 		LCD_OUT(2,1,"**Invalid Code**") ;
$041E	$3002			MOVLW	2
$041F	$00E7			MOVWF	FARG_LCD_Out+0
$0420	$3001			MOVLW	1
$0421	$00E8			MOVWF	FARG_LCD_Out+1
$0422	$30B8			MOVLW	lstr2_thelock
$0423	$00E9			MOVWF	FARG_LCD_Out+2
$0424	$2138			CALL	_LCD_Out
;thelock.c,98 :: 		attempts++; //increment attempts
$0425	$0ACE			INCF	_attempts, 1
;thelock.c,99 :: 		kp+=attempts;//kp = kp + attempts
$0426	$084E			MOVF	_attempts, 0
$0427	$07B6			ADDWF	_kp, 1
;thelock.c,100 :: 		if(attempts < 3)  //attempts less than 3 times
$0428	$3003			MOVLW	3
$0429	$024E			SUBWF	_attempts, 0
$042A	$1803			BTFSC	STATUS, C
$042B	$2C2F			GOTO	L_main_49
;thelock.c,101 :: 		state=1;     //go state 1
$042C	$3001			MOVLW	1
$042D	$00B5			MOVWF	_state
$042E	$2C31			GOTO	L_main_50
$042F	$	L_main_49:
;thelock.c,103 :: 		state=16;
$042F	$3010			MOVLW	16
$0430	$00B5			MOVWF	_state
$0431	$	L_main_50:
;thelock.c,104 :: 		while(!keypad_Read()){}   //wait for enter key press
$0431	$	L_main_51:
$0431	$2090			CALL	_Keypad_Read
$0432	$0870			MOVF	STACK_0, 0
$0433	$1903			BTFSC	STATUS, Z
$0434	$2C31			GOTO	L_main_51
$0435	$	L_main_52:
;thelock.c,105 :: 		Delay_ms(10)             ;//debounce time
$0435	$300D			MOVLW	13
$0436	$00FB			MOVWF	STACK_11
$0437	$30FF			MOVLW	255
$0438	$00FA			MOVWF	STACK_10
$0439	$0BFB			DECFSZ	STACK_11, F
$043A	$2C3C			GOTO	$+2
$043B	$2C3F			GOTO	$+4
$043C	$0BFA			DECFSZ	STACK_10, F
$043D	$2C3C			GOTO	$-1
$043E	$2C39			GOTO	$-5
$043F	$30F3			MOVLW	243
$0440	$00FA			MOVWF	STACK_10
$0441	$0BFA			DECFSZ	STACK_10, F
$0442	$2C41			GOTO	$-1
$0443	$0000			NOP
;thelock.c,106 :: 		kp = Keypad_Released()   ;//wait for release
$0444	$217C			CALL	_Keypad_Released
$0445	$0870			MOVF	STACK_0, 0
$0446	$00B6			MOVWF	_kp
;thelock.c,107 :: 		LCD_Cmd(LCD_CLEAR);
$0447	$3001			MOVLW	1
$0448	$1683			BSF	STATUS, RP0
$0449	$00E4			MOVWF	FARG_Lcd_Cmd+0
$044A	$201F			CALL	_Lcd_Cmd
;thelock.c,108 :: 		break;
$044B	$2DC0			GOTO	L_main_3
;thelock.c,109 :: 		case 12://open door1 for 5secs
$044C	$	L_main_53:
;thelock.c,110 :: 		LCD_Cmd(LCD_CLEAR);
$044C	$3001			MOVLW	1
$044D	$1683			BSF	STATUS, RP0
$044E	$00E4			MOVWF	FARG_Lcd_Cmd+0
$044F	$201F			CALL	_Lcd_Cmd
;thelock.c,111 :: 		Lcd_out(2,1,text1) ;
$0450	$3002			MOVLW	2
$0451	$00E7			MOVWF	FARG_LCD_Out+0
$0452	$3001			MOVLW	1
$0453	$00E8			MOVWF	FARG_LCD_Out+1
$0454	$304F			MOVLW	_text1
$0455	$00E9			MOVWF	FARG_LCD_Out+2
$0456	$2138			CALL	_LCD_Out
;thelock.c,112 :: 		Lcd_out(1,1,text);
$0457	$3001			MOVLW	1
$0458	$00E7			MOVWF	FARG_LCD_Out+0
$0459	$3001			MOVLW	1
$045A	$00E8			MOVWF	FARG_LCD_Out+1
$045B	$3024			MOVLW	_text
$045C	$00E9			MOVWF	FARG_LCD_Out+2
$045D	$2138			CALL	_LCD_Out
;thelock.c,114 :: 		PORTC.F4=1;
$045E	$1607			BSF	PORTC, 4
;thelock.c,115 :: 		PORTD.f4=1;
$045F	$1608			BSF	PORTD, 4
;thelock.c,116 :: 		PORTD.F7 = 0;
$0460	$1388			BCF	PORTD, 7
;thelock.c,117 :: 		PORTD.F6 = 0;
$0461	$1308			BCF	PORTD, 6
;thelock.c,118 :: 		PORTD.F5 = 0 ;
$0462	$1288			BCF	PORTD, 5
;thelock.c,119 :: 		Delay_ms(9000); //delay 9secs
$0463	$302E			MOVLW	46
$0464	$00FC			MOVWF	STACK_12
$0465	$30FF			MOVLW	255
$0466	$00FB			MOVWF	STACK_11
$0467	$30FF			MOVLW	255
$0468	$00FA			MOVWF	STACK_10
$0469	$0BFC			DECFSZ	STACK_12, F
$046A	$2C6C			GOTO	$+2
$046B	$2C73			GOTO	$+8
$046C	$0BFB			DECFSZ	STACK_11, F
$046D	$2C6F			GOTO	$+2
$046E	$2C72			GOTO	$+4
$046F	$0BFA			DECFSZ	STACK_10, F
$0470	$2C6F			GOTO	$-1
$0471	$2C6C			GOTO	$-5
$0472	$2C69			GOTO	$-9
$0473	$30E4			MOVLW	228
$0474	$00FB			MOVWF	STACK_11
$0475	$30FF			MOVLW	255
$0476	$00FA			MOVWF	STACK_10
$0477	$0BFB			DECFSZ	STACK_11, F
$0478	$2C7A			GOTO	$+2
$0479	$2C7D			GOTO	$+4
$047A	$0BFA			DECFSZ	STACK_10, F
$047B	$2C7A			GOTO	$-1
$047C	$2C77			GOTO	$-5
$047D	$306F			MOVLW	111
$047E	$00FA			MOVWF	STACK_10
$047F	$0BFA			DECFSZ	STACK_10, F
$0480	$2C7F			GOTO	$-1
$0481	$0000			NOP
;thelock.c,121 :: 		PORTC.F4 = 0;
$0482	$1207			BCF	PORTC, 4
;thelock.c,122 :: 		LCD_Cmd(LCD_CLEAR)         ;
$0483	$3001			MOVLW	1
$0484	$1683			BSF	STATUS, RP0
$0485	$00E4			MOVWF	FARG_Lcd_Cmd+0
$0486	$201F			CALL	_Lcd_Cmd
;thelock.c,123 :: 		attempts=0;
$0487	$01CE			CLRF	_attempts, 1
;thelock.c,124 :: 		state=1;
$0488	$3001			MOVLW	1
$0489	$00B5			MOVWF	_state
;thelock.c,125 :: 		break;
$048A	$2DC0			GOTO	L_main_3
;thelock.c,126 :: 		case 13: //open door2 for 5secs
$048B	$	L_main_54:
;thelock.c,127 :: 		LCD_Cmd(LCD_CLEAR);//clear display
$048B	$3001			MOVLW	1
$048C	$1683			BSF	STATUS, RP0
$048D	$00E4			MOVWF	FARG_Lcd_Cmd+0
$048E	$201F			CALL	_Lcd_Cmd
;thelock.c,128 :: 		LCD_OUT(2,1,text2);
$048F	$3002			MOVLW	2
$0490	$00E7			MOVWF	FARG_LCD_Out+0
$0491	$3001			MOVLW	1
$0492	$00E8			MOVWF	FARG_LCD_Out+1
$0493	$305B			MOVLW	_text2
$0494	$00E9			MOVWF	FARG_LCD_Out+2
$0495	$2138			CALL	_LCD_Out
;thelock.c,129 :: 		Lcd_out(1,1,text) ;
$0496	$3001			MOVLW	1
$0497	$00E7			MOVWF	FARG_LCD_Out+0
$0498	$3001			MOVLW	1
$0499	$00E8			MOVWF	FARG_LCD_Out+1
$049A	$3024			MOVLW	_text
$049B	$00E9			MOVWF	FARG_LCD_Out+2
$049C	$2138			CALL	_LCD_Out
;thelock.c,131 :: 		PORTC.F4=1;
$049D	$1607			BSF	PORTC, 4
;thelock.c,132 :: 		PORTD.F5=1;
$049E	$1688			BSF	PORTD, 5
;thelock.c,133 :: 		PORTD.f4=0;
$049F	$1208			BCF	PORTD, 4
;thelock.c,134 :: 		PORTD.f6=0;
$04A0	$1308			BCF	PORTD, 6
;thelock.c,135 :: 		PORTD.f7=0;
$04A1	$1388			BCF	PORTD, 7
;thelock.c,136 :: 		Delay_ms(9000);
$04A2	$302E			MOVLW	46
$04A3	$00FC			MOVWF	STACK_12
$04A4	$30FF			MOVLW	255
$04A5	$00FB			MOVWF	STACK_11
$04A6	$30FF			MOVLW	255
$04A7	$00FA			MOVWF	STACK_10
$04A8	$0BFC			DECFSZ	STACK_12, F
$04A9	$2CAB			GOTO	$+2
$04AA	$2CB2			GOTO	$+8
$04AB	$0BFB			DECFSZ	STACK_11, F
$04AC	$2CAE			GOTO	$+2
$04AD	$2CB1			GOTO	$+4
$04AE	$0BFA			DECFSZ	STACK_10, F
$04AF	$2CAE			GOTO	$-1
$04B0	$2CAB			GOTO	$-5
$04B1	$2CA8			GOTO	$-9
$04B2	$30E4			MOVLW	228
$04B3	$00FB			MOVWF	STACK_11
$04B4	$30FF			MOVLW	255
$04B5	$00FA			MOVWF	STACK_10
$04B6	$0BFB			DECFSZ	STACK_11, F
$04B7	$2CB9			GOTO	$+2
$04B8	$2CBC			GOTO	$+4
$04B9	$0BFA			DECFSZ	STACK_10, F
$04BA	$2CB9			GOTO	$-1
$04BB	$2CB6			GOTO	$-5
$04BC	$306F			MOVLW	111
$04BD	$00FA			MOVWF	STACK_10
$04BE	$0BFA			DECFSZ	STACK_10, F
$04BF	$2CBE			GOTO	$-1
$04C0	$0000			NOP
;thelock.c,137 :: 		PORTC.F4 = 0 ;//turn door2 led off
$04C1	$1207			BCF	PORTC, 4
;thelock.c,138 :: 		LCD_Cmd(LCD_CLEAR);
$04C2	$3001			MOVLW	1
$04C3	$1683			BSF	STATUS, RP0
$04C4	$00E4			MOVWF	FARG_Lcd_Cmd+0
$04C5	$201F			CALL	_Lcd_Cmd
;thelock.c,139 :: 		attempts=0;
$04C6	$01CE			CLRF	_attempts, 1
;thelock.c,140 :: 		state =1;
$04C7	$3001			MOVLW	1
$04C8	$00B5			MOVWF	_state
;thelock.c,141 :: 		break;
$04C9	$2DC0			GOTO	L_main_3
;thelock.c,142 :: 		case 14:      //open door3
$04CA	$	L_main_55:
;thelock.c,143 :: 		LCD_Cmd(LCD_CLEAR);
$04CA	$3001			MOVLW	1
$04CB	$1683			BSF	STATUS, RP0
$04CC	$00E4			MOVWF	FARG_Lcd_Cmd+0
$04CD	$201F			CALL	_Lcd_Cmd
;thelock.c,144 :: 		LCD_OUT(2,1," *Door3 On*");
$04CE	$3002			MOVLW	2
$04CF	$00E7			MOVWF	FARG_LCD_Out+0
$04D0	$3001			MOVLW	1
$04D1	$00E8			MOVWF	FARG_LCD_Out+1
$04D2	$30C9			MOVLW	lstr3_thelock
$04D3	$00E9			MOVWF	FARG_LCD_Out+2
$04D4	$2138			CALL	_LCD_Out
;thelock.c,145 :: 		Lcd_out(1,1,text) ;
$04D5	$3001			MOVLW	1
$04D6	$00E7			MOVWF	FARG_LCD_Out+0
$04D7	$3001			MOVLW	1
$04D8	$00E8			MOVWF	FARG_LCD_Out+1
$04D9	$3024			MOVLW	_text
$04DA	$00E9			MOVWF	FARG_LCD_Out+2
$04DB	$2138			CALL	_LCD_Out
;thelock.c,146 :: 		PORTC.F4=1;
$04DC	$1607			BSF	PORTC, 4
;thelock.c,147 :: 		PORTD.F4=0;
$04DD	$1208			BCF	PORTD, 4
;thelock.c,148 :: 		PORTD.F5=0;
$04DE	$1288			BCF	PORTD, 5
;thelock.c,149 :: 		PORTD.f6=1;
$04DF	$1708			BSF	PORTD, 6
;thelock.c,150 :: 		PORTD.f7=0;
$04E0	$1388			BCF	PORTD, 7
;thelock.c,151 :: 		Delay_ms(9000);
$04E1	$302E			MOVLW	46
$04E2	$00FC			MOVWF	STACK_12
$04E3	$30FF			MOVLW	255
$04E4	$00FB			MOVWF	STACK_11
$04E5	$30FF			MOVLW	255
$04E6	$00FA			MOVWF	STACK_10
$04E7	$0BFC			DECFSZ	STACK_12, F
$04E8	$2CEA			GOTO	$+2
$04E9	$2CF1			GOTO	$+8
$04EA	$0BFB			DECFSZ	STACK_11, F
$04EB	$2CED			GOTO	$+2
$04EC	$2CF0			GOTO	$+4
$04ED	$0BFA			DECFSZ	STACK_10, F
$04EE	$2CED			GOTO	$-1
$04EF	$2CEA			GOTO	$-5
$04F0	$2CE7			GOTO	$-9
$04F1	$30E4			MOVLW	228
$04F2	$00FB			MOVWF	STACK_11
$04F3	$30FF			MOVLW	255
$04F4	$00FA			MOVWF	STACK_10
$04F5	$0BFB			DECFSZ	STACK_11, F
$04F6	$2CF8			GOTO	$+2
$04F7	$2CFB			GOTO	$+4
$04F8	$0BFA			DECFSZ	STACK_10, F
$04F9	$2CF8			GOTO	$-1
$04FA	$2CF5			GOTO	$-5
$04FB	$306F			MOVLW	111
$04FC	$00FA			MOVWF	STACK_10
$04FD	$0BFA			DECFSZ	STACK_10, F
$04FE	$2CFD			GOTO	$-1
$04FF	$0000			NOP
;thelock.c,152 :: 		PORTC.F4 =0;
$0500	$1207			BCF	PORTC, 4
;thelock.c,153 :: 		LCD_Cmd(LCD_CLEAR);
$0501	$3001			MOVLW	1
$0502	$1683			BSF	STATUS, RP0
$0503	$00E4			MOVWF	FARG_Lcd_Cmd+0
$0504	$201F			CALL	_Lcd_Cmd
;thelock.c,154 :: 		attempts=0;
$0505	$01CE			CLRF	_attempts, 1
;thelock.c,155 :: 		state =1;
$0506	$3001			MOVLW	1
$0507	$00B5			MOVWF	_state
;thelock.c,156 :: 		break;
$0508	$2DC0			GOTO	L_main_3
;thelock.c,157 :: 		case 15: //open door1 and door2
$0509	$	L_main_56:
;thelock.c,158 :: 		LCD_Cmd(LCD_CLEAR);
$0509	$3001			MOVLW	1
$050A	$1683			BSF	STATUS, RP0
$050B	$00E4			MOVWF	FARG_Lcd_Cmd+0
$050C	$201F			CALL	_Lcd_Cmd
;thelock.c,159 :: 		LCD_OUT(2,1,text3);
$050D	$3002			MOVLW	2
$050E	$00E7			MOVWF	FARG_LCD_Out+0
$050F	$3001			MOVLW	1
$0510	$00E8			MOVWF	FARG_LCD_Out+1
$0511	$30A0			MOVLW	_text3
$0512	$00E9			MOVWF	FARG_LCD_Out+2
$0513	$2138			CALL	_LCD_Out
;thelock.c,160 :: 		Lcd_out(1,1,text) ;
$0514	$3001			MOVLW	1
$0515	$00E7			MOVWF	FARG_LCD_Out+0
$0516	$3001			MOVLW	1
$0517	$00E8			MOVWF	FARG_LCD_Out+1
$0518	$3024			MOVLW	_text
$0519	$00E9			MOVWF	FARG_LCD_Out+2
$051A	$2138			CALL	_LCD_Out
;thelock.c,161 :: 		PORTC.F4=1;
$051B	$1607			BSF	PORTC, 4
;thelock.c,162 :: 		PORTD.F4=1;
$051C	$1608			BSF	PORTD, 4
;thelock.c,163 :: 		PORTD.F5=1;
$051D	$1688			BSF	PORTD, 5
;thelock.c,164 :: 		PORTD.f6=0;
$051E	$1308			BCF	PORTD, 6
;thelock.c,165 :: 		PORTD.f7=0;
$051F	$1388			BCF	PORTD, 7
;thelock.c,166 :: 		Delay_ms(9000);
$0520	$302E			MOVLW	46
$0521	$00FC			MOVWF	STACK_12
$0522	$30FF			MOVLW	255
$0523	$00FB			MOVWF	STACK_11
$0524	$30FF			MOVLW	255
$0525	$00FA			MOVWF	STACK_10
$0526	$0BFC			DECFSZ	STACK_12, F
$0527	$2D29			GOTO	$+2
$0528	$2D30			GOTO	$+8
$0529	$0BFB			DECFSZ	STACK_11, F
$052A	$2D2C			GOTO	$+2
$052B	$2D2F			GOTO	$+4
$052C	$0BFA			DECFSZ	STACK_10, F
$052D	$2D2C			GOTO	$-1
$052E	$2D29			GOTO	$-5
$052F	$2D26			GOTO	$-9
$0530	$30E4			MOVLW	228
$0531	$00FB			MOVWF	STACK_11
$0532	$30FF			MOVLW	255
$0533	$00FA			MOVWF	STACK_10
$0534	$0BFB			DECFSZ	STACK_11, F
$0535	$2D37			GOTO	$+2
$0536	$2D3A			GOTO	$+4
$0537	$0BFA			DECFSZ	STACK_10, F
$0538	$2D37			GOTO	$-1
$0539	$2D34			GOTO	$-5
$053A	$306F			MOVLW	111
$053B	$00FA			MOVWF	STACK_10
$053C	$0BFA			DECFSZ	STACK_10, F
$053D	$2D3C			GOTO	$-1
$053E	$0000			NOP
;thelock.c,167 :: 		PORTC.F4 = 0 ;
$053F	$1207			BCF	PORTC, 4
;thelock.c,168 :: 		LCD_Cmd(LCD_CLEAR);
$0540	$3001			MOVLW	1
$0541	$1683			BSF	STATUS, RP0
$0542	$00E4			MOVWF	FARG_Lcd_Cmd+0
$0543	$201F			CALL	_Lcd_Cmd
;thelock.c,169 :: 		attempts=0;
$0544	$01CE			CLRF	_attempts, 1
;thelock.c,170 :: 		state =1;
$0545	$3001			MOVLW	1
$0546	$00B5			MOVWF	_state
;thelock.c,171 :: 		break;
$0547	$2DC0			GOTO	L_main_3
;thelock.c,172 :: 		default:// must be a bad attempts
$0548	$	L_main_57:
;thelock.c,173 :: 		LCD_OUT(2,1,"  **Alarm On**");
$0548	$3002			MOVLW	2
$0549	$00E7			MOVWF	FARG_LCD_Out+0
$054A	$3001			MOVLW	1
$054B	$00E8			MOVWF	FARG_LCD_Out+1
$054C	$30D5			MOVLW	lstr4_thelock
$054D	$00E9			MOVWF	FARG_LCD_Out+2
$054E	$2138			CALL	_LCD_Out
;thelock.c,174 :: 		LCD_OUT(1,1,text);
$054F	$3001			MOVLW	1
$0550	$00E7			MOVWF	FARG_LCD_Out+0
$0551	$3001			MOVLW	1
$0552	$00E8			MOVWF	FARG_LCD_Out+1
$0553	$3024			MOVLW	_text
$0554	$00E9			MOVWF	FARG_LCD_Out+2
$0555	$2138			CALL	_LCD_Out
;thelock.c,175 :: 		PORTC.F4=1;
$0556	$1607			BSF	PORTC, 4
;thelock.c,176 :: 		PORTD.F4=0;
$0557	$1208			BCF	PORTD, 4
;thelock.c,177 :: 		PORTD.F5=0;
$0558	$1288			BCF	PORTD, 5
;thelock.c,178 :: 		PORTD.f6=0;
$0559	$1308			BCF	PORTD, 6
;thelock.c,179 :: 		PORTD.f7=1;
$055A	$1788			BSF	PORTD, 7
;thelock.c,180 :: 		Delay_ms(9000);
$055B	$302E			MOVLW	46
$055C	$00FC			MOVWF	STACK_12
$055D	$30FF			MOVLW	255
$055E	$00FB			MOVWF	STACK_11
$055F	$30FF			MOVLW	255
$0560	$00FA			MOVWF	STACK_10
$0561	$0BFC			DECFSZ	STACK_12, F
$0562	$2D64			GOTO	$+2
$0563	$2D6B			GOTO	$+8
$0564	$0BFB			DECFSZ	STACK_11, F
$0565	$2D67			GOTO	$+2
$0566	$2D6A			GOTO	$+4
$0567	$0BFA			DECFSZ	STACK_10, F
$0568	$2D67			GOTO	$-1
$0569	$2D64			GOTO	$-5
$056A	$2D61			GOTO	$-9
$056B	$30E4			MOVLW	228
$056C	$00FB			MOVWF	STACK_11
$056D	$30FF			MOVLW	255
$056E	$00FA			MOVWF	STACK_10
$056F	$0BFB			DECFSZ	STACK_11, F
$0570	$2D72			GOTO	$+2
$0571	$2D75			GOTO	$+4
$0572	$0BFA			DECFSZ	STACK_10, F
$0573	$2D72			GOTO	$-1
$0574	$2D6F			GOTO	$-5
$0575	$306F			MOVLW	111
$0576	$00FA			MOVWF	STACK_10
$0577	$0BFA			DECFSZ	STACK_10, F
$0578	$2D77			GOTO	$-1
$0579	$0000			NOP
;thelock.c,181 :: 		PORTC.F4=0;
$057A	$1207			BCF	PORTC, 4
;thelock.c,182 :: 		LCD_Cmd(LCD_CLEAR);
$057B	$3001			MOVLW	1
$057C	$1683			BSF	STATUS, RP0
$057D	$00E4			MOVWF	FARG_Lcd_Cmd+0
$057E	$201F			CALL	_Lcd_Cmd
;thelock.c,183 :: 		attempts=0;
$057F	$01CE			CLRF	_attempts, 1
;thelock.c,184 :: 		state = 1; //goes to state 1
$0580	$3001			MOVLW	1
$0581	$00B5			MOVWF	_state
;thelock.c,185 :: 		break;
$0582	$2DC0			GOTO	L_main_3
;thelock.c,186 :: 		}
$0583	$	L_main_2:
$0583	$0835			MOVF	_state, 0
$0584	$3A01			XORLW	1
$0585	$1903			BTFSC	STATUS, Z
$0586	$2B34			GOTO	L_main_4
$0587	$0835			MOVF	_state, 0
$0588	$3A02			XORLW	2
$0589	$1903			BTFSC	STATUS, Z
$058A	$2B70			GOTO	L_main_7
$058B	$0835			MOVF	_state, 0
$058C	$3A03			XORLW	3
$058D	$1903			BTFSC	STATUS, Z
$058E	$2B81			GOTO	L_main_12
$058F	$0835			MOVF	_state, 0
$0590	$3A04			XORLW	4
$0591	$1903			BTFSC	STATUS, Z
$0592	$2BAB			GOTO	L_main_15
$0593	$0835			MOVF	_state, 0
$0594	$3A05			XORLW	5
$0595	$1903			BTFSC	STATUS, Z
$0596	$2BBC			GOTO	L_main_20
$0597	$0835			MOVF	_state, 0
$0598	$3A06			XORLW	6
$0599	$1903			BTFSC	STATUS, Z
$059A	$2BD5			GOTO	L_main_23
$059B	$0835			MOVF	_state, 0
$059C	$3A07			XORLW	7
$059D	$1903			BTFSC	STATUS, Z
$059E	$2BE6			GOTO	L_main_28
$059F	$0835			MOVF	_state, 0
$05A0	$3A08			XORLW	8
$05A1	$1903			BTFSC	STATUS, Z
$05A2	$2BF4			GOTO	L_main_33
$05A3	$0835			MOVF	_state, 0
$05A4	$3A09			XORLW	9
$05A5	$1903			BTFSC	STATUS, Z
$05A6	$2C02			GOTO	L_main_38
$05A7	$0835			MOVF	_state, 0
$05A8	$3A0A			XORLW	10
$05A9	$1903			BTFSC	STATUS, Z
$05AA	$2C10			GOTO	L_main_43
$05AB	$0835			MOVF	_state, 0
$05AC	$3A0B			XORLW	11
$05AD	$1903			BTFSC	STATUS, Z
$05AE	$2C1E			GOTO	L_main_48
$05AF	$0835			MOVF	_state, 0
$05B0	$3A0C			XORLW	12
$05B1	$1903			BTFSC	STATUS, Z
$05B2	$2C4C			GOTO	L_main_53
$05B3	$0835			MOVF	_state, 0
$05B4	$3A0D			XORLW	13
$05B5	$1903			BTFSC	STATUS, Z
$05B6	$2C8B			GOTO	L_main_54
$05B7	$0835			MOVF	_state, 0
$05B8	$3A0E			XORLW	14
$05B9	$1903			BTFSC	STATUS, Z
$05BA	$2CCA			GOTO	L_main_55
$05BB	$0835			MOVF	_state, 0
$05BC	$3A0F			XORLW	15
$05BD	$1903			BTFSC	STATUS, Z
$05BE	$2D09			GOTO	L_main_56
$05BF	$2D48			GOTO	L_main_57
$05C0	$	L_main_3:
;thelock.c,187 :: 		}  while(1);
$05C0	$2B33			GOTO	L_main_0
;thelock.c,188 :: 		}
$05C1	$2DC1			GOTO	$
